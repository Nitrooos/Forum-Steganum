// Zmienna globalna stegano
stegano = (function () {
    var modules = {
        load: { },
        access: { },
        algorithm: { }
    };
    
    function run() {
        document.addEventListener('module-load-loaded', function () {
            modules.access = stegano.access();
        });
        
        modules.load = stegano.load();
        modules.algorithm = stegano.algorithm();
    }
    
    function module(moduleName) {
        return modules[moduleName];
    }
    
    return {
        run: run,
        module: module
    };
})();

stegano.access = (function () {
    var imageDimensions;
    
    function getPixel(x, y) {
        // jeśli wykroczono poza zakres
        if (x > imageDimensions.width || y > imageDimensions.height) {
            throw "Arguments out of image dimensions";
        }
        
        // za każdym razem data może być inna
        var data = stegano.module('load').getImageData().data,
            baseIndex = imageDimensions.width*y + x,
            color = {
                r: data[baseIndex + 0],
                g: data[baseIndex + 1],
                b: data[baseIndex + 2],
                a: data[baseIndex + 3]
            };
    
        return color;
    }
    
    function setPixel(x, y, color) {
        if (!color) {
            throw "None color to set specified";
        }
        
        var data = stegano.module('load').getImageData().data,
            baseIndex = imageDimensions.width*y + x;
        data[baseIndex + 0] = color.r;
        data[baseIndex + 1] = color.g;
        data[baseIndex + 2] = color.b;
        data[baseIndex + 3] = color.a;
    }
    
    // taki jakby konstruktor, wywoływany automatycznie kiedy wywoływana jest funkcja stegano.access
    // funkcja w tzw. domknięciu ()
    (function () {
        var imageData = stegano.module('load').getImageData();
        imageDimensions = {
            width: imageData.width,
            height: imageData.height
        };
    })();
    
    return {
        getPixel: getPixel,
        setPixel: setPixel
    };
});

stegano.load = (function () {
    var fileInputId = 'image-file', formId = 'image-form';    
    var fileInput, file, fileReader, img, imageData;
    var moduleLoadedEvent = new Event('module-load-loaded');

    function _check() {
        if (typeof window.FileReader !== 'function') {
            _write("The file API isn't supported on this browser yet.");
            return false;
        }

        fileInput = document.getElementById(fileInputId);
        if (!fileInput) {
            _write("Um, couldn't find the imgfile element.");
            return false;
        } else if (!fileInput.files) {
            _write("This browser doesn't seem to support the `files` property of file fileInputs.");
            return false;
        } else if (!fileInput.files[0]) {
            _write("Please select a file before clicking 'Load'");
            return false;
        }
        return true;
    }
    
    function _createImage() {
        img = new Image();
        img.onload = _imageLoaded;
        img.src = fileReader.result;
    }

    function _imageLoaded() {
        var canvas = document.createElement('canvas');
        document.getElementById(formId).appendChild(canvas);
        
        canvas.width = img.width;
        canvas.height = img.height;
        var ctx = canvas.getContext("2d");
        ctx.drawImage(img, 0, 0);
        
        imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);
        document.dispatchEvent(moduleLoadedEvent);
    }

    function _write(msg) {
        var p = document.createElement('p');
        p.innerHTML = msg;
        document.body.appendChild(p);
    }

    function loadCanvasWithImage() {
        if (_check()) {
            file = fileInput.files[0];
            fileReader = new FileReader();
            fileReader.onload = _createImage;
            fileReader.readAsDataURL(file);
        }
    }
    
    function getImageData() {
        return imageData;
    }
    
    // taki jakby konstruktor, wywoływany automatycznie kiedy wywoływana jest funkcja stegano.load
    // funkcja w tzw. domknięciu ()
    (function () {
        loadCanvasWithImage();
    })();
    
    return {
        loadCanvasWithImage: loadCanvasWithImage,
        getImageData: getImageData
    };
});

stegano.algorithm = (function () {
    var algorithms = {
        hiding: { },
        retrieving: { }
    };
    
    // taki jakby konstruktor, wywoływany automatycznie kiedy wywoływana jest funkcja stegano.load
    // funkcja w tzw. domknięciu ()
    (function () {
        algorithms.hiding = stegano.algorithm.hiding();
        algorithms.retrieving = stegano.algorithm.retrieving();
    })();
    
    return {
        hiding: algorithms.hiding.run,
        retrieving: algorithms.retrieving.run
    };
});
stegano.algorithm.hiding = (function () {
    
    // taki jakby konstruktor, wywoływany automatycznie kiedy wywoływana jest funkcja stegano.load
    // funkcja w tzw. domknięciu ()
    (function () {
        
    })();
});
stegano.algorithm.retrieving = (function () {
    
    // taki jakby konstruktor, wywoływany automatycznie kiedy wywoływana jest funkcja stegano.load
    // funkcja w tzw. domknięciu ()
    (function () {
        
    })();
});