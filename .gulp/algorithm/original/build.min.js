// Zmienna globalna stegano
stegano = (function () {
    var modules = { };
    
    function _check() {
        // Sprawdź czy przeglądarka spełnia wymagania modułu
        if (typeof window.FileReader !== 'function') {
            _write("The file API isn't supported on this browser yet.");
            return false;
        }
        
        // ... czy wspiera canvas, image itp.
        return true;
    }
    
    function run() {
        if (_check()) {
            modules.integration = stegano.integration();
            modules.algorithm = stegano.algorithm();
            modules.events = stegano.events();
        } else {
            throw "Your browser cannot support stegano module! Update or install a modern browser!"
        }
    }
    
    function module(moduleName) {
        return modules[moduleName];
    }
    
    return {
        run: run,
        module: module
    };
})();

stegano.algorithm = (function () {
    var algorithms = {
        hiding: { },
        retrieving: { }
    };
    
    // taki jakby konstruktor, wywoływany automatycznie kiedy wywoływana jest funkcja stegano.load
    // funkcja w tzw. domknięciu ()
    (function () {
        algorithms.hiding = stegano.algorithm.hiding();
        algorithms.retrieving = stegano.algorithm.retrieving();
    })();
    
    return {
        hiding: algorithms.hiding.run,
        retrieving: algorithms.retrieving.run
    };
});

stegano.events = (function () {
    var view = 'normal';
    
    function switchView() {
        if (view === 'normal') {
            // ... switch to secret
            view = 'secret';
        } else if (view === 'secret') {
            // switch to normal
            view = 'normal';
        }
    }
    
    function sendMessage() {
        function _check() {
            // TO POWINNO BYĆ W AKCJI WYWOŁYWANEJ NA KLIKNIĘCIE "SEND"
            fileInput = document.getElementById(stegano.module('integration').getElementsIds().fileInputId);
            if (!fileInput) {
                _write("Um, couldn't find the imgfile element.");
                return false;
            } else if (!fileInput.files) {
                _write("This browser doesn't seem to support the `files` property of file fileInputs.");
                return false;
            } else if (!fileInput.files[0]) {
                _write("Please select a file before clicking 'Load'");
                return false;
            }
            return true;
        }
        
        function _write(msg) {
            var p = document.createElement('p');
            p.innerHTML = msg;
            document.body.appendChild(p);
        }
        
        stegano.module('algorithm').hiding();
        
        // hide
        // and send
    }
    
    return {
        switchView: switchView,
        sendMessage: sendMessage
    }
});

stegano.image = (function () {
    var submodules = { };
    
    (function () {
        submodules.loader = stegano.image.loader();
        submodules.access = stegano.image.access();
    })();
});

stegano.integration = (function () {
    var integration = { };
    var elements = {
        fileInputId: 'image-file',
        postInputId: 'post-message-id',
        formId: 'image-form'
    };
    
    function integrate() {
        // utworzy na żądanie canvas, input do wpisania tajnej wiadomości 
        // i switch do przełączania widoków zwykły/tajny
        integration.canvas = stegano.integration.canvas();
        integration.input = stegano.integration.input();
        integration.switch = stegano.integration.switch();
    }
    
    function getImageData() {
        if (integration.canvas !== undefined) {
            return integration.canvas.getImageData();
        }
    }
    
    function getElementsIds() {
        return elements;
    }
    
    function getCanvas() {
        if (integration.canvas !== undefined) {
            return integration.canvas.get();
        }
    }

    return {
        run: integrate,
        getImageData: getImageData,
        getElementsIds: getElementsIds,
        getCanvas: getCanvas
    };
});

stegano.algorithm.hiding = (function () {

    function run() {
        console.log('Hiding');
    }
    
    return {
        run: run
    }
});

stegano.algorithm.retrieving = (function () {
    
    function run() {
        console.log('Retrieving');
    }
    
    return {
        run: run
    }
});

stegano.image.access = (function () {
    function getPixel(image, x, y) {
        // jeśli wykroczono poza zakres
        if (x > image.width || y > image.height) {
            throw "Arguments out of image dimensions";
        }
        
        // za każdym razem data może być inna
        var data = image.data,
            baseIndex = image.width*y + x,
            color = {
                r: data[baseIndex + 0],
                g: data[baseIndex + 1],
                b: data[baseIndex + 2],
                a: data[baseIndex + 3]
            };
    
        return color;
    }
    
    function setPixel(image, x, y, color) {
        if (!color) {
            throw "None color to set specified";
        }
        
        var data = image.data,
            baseIndex = image.width*y + x;
        data[baseIndex + 0] = color.r;
        data[baseIndex + 1] = color.g;
        data[baseIndex + 2] = color.b;
        data[baseIndex + 3] = color.a;
    }
        
    return {
        getPixel: getPixel,
        setPixel: setPixel
    };
});

stegano.image.loader = (function () {
    var fileReader, img, imageData, canvas;

    function _createImage() {
        img = new Image();
        img.onload = _imageLoaded;
        img.src = fileReader.result;
    }

    function _imageLoaded() {
        canvas.width = img.naturalWidth;
        canvas.height = img.naturalHeight;
        
        var ctx = canvas.getContext("2d");                      // pobierz kontekst
        ctx.drawImage(img, 0, 0);                               // narysuj obrazek na canvasie

        imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);
    }

    function loadImage(file) {
        canvas = stegano.module('integration').getCanvas();
        fileReader = new FileReader();
        fileReader.onload = _createImage;
        fileReader.readAsDataURL(file);
    }
    
    function getImageData() {
        return imageData;
    }
    
    return {
        loadImage: loadImage,
        getImageData: getImageData
    };
});

stegano.integration.canvas = (function () {
    var canvas;
    
    function _run() {
        canvas = document.createElement('canvas');              // utwórz własny canvas
        canvas.setAttribute('style', 'display:none');           // ukryj go
        canvas.width = 0;
        canvas.height = 0;

        document.getElementById(
            stegano.module('integration').getElementsIds().formId
        ).appendChild(canvas);                                  // dodaj canvas do drzewa DOM
    }
    
    function getCanvas() {
        return canvas;
    }
    
    // taki jakby konstruktor, wywoływany automatycznie kiedy wywoływana jest funkcja stegano.load
    // funkcja w tzw. domknięciu ()
    (function () {
        _run();
    })();
    
    return {
        get: getCanvas
    };
});

stegano.integration.input = (function () {
    var postInputId, secretInput;
    
    function _insertAfter(newNode, refNode) {
        refNode.parentNode.insertBefore(newNode, refNode.nextSibling);
    }
    
    function _run() {
        if (postInputId === undefined) {
            return;
        }
        
        var postInput = document.getElementById(postInputId);
        secretInput = document.createElement('input');
        secretInput.type = 'text';
    
        _insertAfter(secretInput, postInput);
    }
    
    function secretText() {
        return secretInput.value;
    }
    
    // taki jakby konstruktor, wywoływany automatycznie kiedy wywoływana jest funkcja stegano.load
    // funkcja w tzw. domknięciu ()
    (function () {
        postInputId = stegano.module('integration').getElementsIds().postInputId;
        _run();
    })();
    
    return {
        secretText: secretText
    };
});

stegano.integration.switch = (function () {
    var switchInput, formId;
    
    function _run() {
        if (formId === undefined) {
            return;
        }
        
        var form = document.getElementById(formId);
        
        switchInput = document.createElement('input');
        switchInput.type = 'checkbox';
        form.appendChild(switchInput);
    }
    
    // taki jakby konstruktor, wywoływany automatycznie kiedy wywoływana jest funkcja stegano.load
    // funkcja w tzw. domknięciu ()
    (function () {
        formId = stegano.module('integration').getElementsIds().formId;
        _run();
    })();
});
